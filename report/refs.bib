@article{Wolpert1997,
  doi = {10.1109/4235.585893},
  url = {https://doi.org/10.1109/4235.585893},
  year = {1997},
  month = apr,
  publisher = {Institute of Electrical and Electronics Engineers ({IEEE})},
  volume = {1},
  number = {1},
  pages = {67--82},
  author = {D.H. Wolpert and W.G. Macready},
  title = {No free lunch theorems for optimization},
  journal = {{IEEE} Transactions on Evolutionary Computation}
}
@article{Igel2005,
  doi = {10.1007/s10852-005-2586-y},
  url = {https://doi.org/10.1007/s10852-005-2586-y},
  year = {2005},
  month = jan,
  publisher = {Springer Science and Business Media {LLC}},
  volume = {3},
  number = {4},
  pages = {313--322},
  author = {Christian Igel and Marc Toussaint},
  title = {A No-Free-Lunch theorem for non-uniform distributions of target functions},
  journal = {Journal of Mathematical Modelling and Algorithms}
}

@article{Ho2002,
  doi = {10.1023/a:1021251113462},
  url = {https://doi.org/10.1023/a:1021251113462},
  year = {2002},
  month = dec,
  publisher = {Springer Science and Business Media {LLC}},
  volume = {115},
  number = {3},
  pages = {549--570},
  author = {Y.C. Ho and D.L. Pepyne},
  title = {Simple Explanation of the No-Free-Lunch Theorem and Its Implications},
  journal = {Journal of Optimization Theory and Applications}
}

@article{Moore2006,
  doi = {10.1109/n-ssc.2006.4785860},
  url = {https://doi.org/10.1109/n-ssc.2006.4785860},
  year = {2006},
  month = sep,
  publisher = {Institute of Electrical and Electronics Engineers ({IEEE})},
  volume = {11},
  number = {3},
  pages = {33--35},
  author = {Gordon E. Moore},
  title = {Cramming more components onto integrated circuits,  Reprinted from Electronics,  volume 38,  number 8,  April 19,  1965,  pp.114 ff.},
  journal = {{IEEE} Solid-State Circuits Society Newsletter}
}

@article{Geer2005,
  doi = {10.1109/mc.2005.160},
  url = {https://doi.org/10.1109/mc.2005.160},
  year = {2005},
  month = may,
  publisher = {Institute of Electrical and Electronics Engineers ({IEEE})},
  volume = {38},
  number = {5},
  pages = {11--13},
  author = {D. Geer},
  title = {Chip makers turn to multicore processors},
  journal = {Computer}
}

@inproceedings{Agarwal2007,
  doi = {10.1145/1278480.1278668},
  url = {https://doi.org/10.1145/1278480.1278668},
  year = {2007},
  publisher = {{ACM} Press},
  author = {Anant Agarwal and Markus Levy},
  title = {The kill rule for multicore},
  booktitle = {Proceedings of the 44th annual conference on Design automation - {DAC} {\textquotesingle}07}
}

@INPROCEEDINGS{6307773,  author={Esmaeilzadeh, Hadi and Blem, Emily and Amant, Renée St. and Sankaralingam, Karthikeyan and Burger, Doug},  booktitle={2011 38th Annual International Symposium on Computer Architecture (ISCA)},   title={Dark silicon and the end of multicore scaling},   year={2011},  volume={},  number={},  pages={365-376},  doi={}}

@misc{goprocgo14:online,
author = {Go Team},
title = {go/proc.go at master · golang/go},
howpublished = {\url{https://github.com/golang/go/blob/master/src/runtime/proc.go#L2597}},
month = {},
year = {2022},
note = {(Accessed on 06/01/2022)}
}

@misc{TokioAna8:online,
author = {Carl Lerche},
title = {Tokio - An asynchronous Rust runtime},
howpublished = {\url{https://tokio.rs/}},
month = {},
year = {},
note = {(Accessed on 06/01/2022)}
}

@inproceedings{Yang2016,
  doi = {10.1145/2851141.2851168},
  url = {https://doi.org/10.1145/2851141.2851168},
  year = {2016},
  month = feb,
  publisher = {{ACM}},
  author = {Chaoran Yang and John Mellor-Crummey},
  title = {A wait-free queue as fast as fetch-and-add},
  booktitle = {Proceedings of the 21st {ACM} {SIGPLAN} Symposium on Principles and Practice of Parallel Programming}
}

@misc{Makingth53:online,
author = {Carl Lerche},
title = {Making the Tokio scheduler 10x faster | Tokio - An asynchronous Rust runtime},
howpublished = {\url{https://tokio.rs/blog/2019-10-scheduler}},
month = {},
year = {},
note = {(Accessed on 06/01/2022)}
}

@inproceedings {workshed,
author = {Sarah McClure and Amy Ousterhout and Scott Shenker and Sylvia Ratnasamy},
title = {Efficient Scheduling Policies for {Microsecond-Scale} Tasks},
booktitle = {19th USENIX Symposium on Networked Systems Design and Implementation (NSDI 22)},
year = {2022},
isbn = {978-1-939133-27-4},
address = {Renton, WA},
pages = {1--18},
url = {https://www.usenix.org/conference/nsdi22/presentation/mcclure},
publisher = {USENIX Association},
month = apr,
}

@misc{chebyras74:online,
author = {chebyrash},
title = {chebyrash/promise: Promise / Future library for Go},
howpublished = {\url{https://github.com/chebyrash/promise}},
month = {},
year = {2022},
note = {(Accessed on 06/01/2022)}
}

@article{mooremulti,
author = {Esmaeilzadeh, Hadi and Blem, Emily and Amant, Ren\'{e}e St. and Sankaralingam, Karthikeyan and Burger, Doug},
title = {Power Challenges May End the Multicore Era},
year = {2013},
issue_date = {February 2013},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {56},
number = {2},
issn = {0001-0782},
url = {https://doi.org/10.1145/2408776.2408797},
doi = {10.1145/2408776.2408797},
abstract = {Starting in 2004, the microprocessor industry has shifted to multicore scaling---increasing the number of cores per die each generation---as its principal strategy for continuing performance growth. Many in the research community believe that this exponential core scaling will continue into the hundreds or thousands of cores per chip, auguring a parallelism revolution in hardware or software. However, while transistor count increases continue at traditional Moore's Law rates, the per-transistor speed and energy efficiency improvements have slowed dramatically. Under these conditions, more cores are only possible if the cores are slower, simpler, or less utilized with each additional technology generation. This paper brings together transistor technology, processor core, and application models to understand whether multicore scaling can sustain the historical exponential performance growth in this energy-limited era. As the number of cores increases, power constraints may prevent powering of all cores at their full speed, requiring a fraction of the cores to be powered off at all times. According to our models, the fraction of these chips that is "dark" may be as much as 50% within three process generations. The low utility of this "dark silicon" may prevent both scaling to higher core counts and ultimately the economic viability of continued silicon scaling. Our results show that core count scaling provides much less performance gain than conventional wisdom suggests. Under (highly) optimistic scaling assumptions---for parallel workloads---multicore scaling provides a 7.9\texttimes{} (23% per year) over ten years. Under more conservative (realistic) assumptions, multicore scaling provides a total performance gain of 3.7\texttimes{} (14% per year) over ten years, and obviously less when sufficiently parallel workloads are unavailable. Without a breakthrough in process technology or microarchitecture, other directions are needed to continue the historical rate of performance improvement.},
journal = {Commun. ACM},
month = {feb},
pages = {93–102},
numpages = {10}
}

@BOOK{Herlihy2012-ga,
  title     = "The art of multiprocessor programming, revised reprint",
  author    = "Herlihy, Maurice and Shavit, Nir",
  publisher = "Morgan Kaufmann",
  month     =  jun,
  year      =  2012
}
@inproceedings{Castello2016,
  doi = {10.1109/cluster.2016.12},
  url = {https://doi.org/10.1109/cluster.2016.12},
  year = {2016},
  month = sep,
  publisher = {{IEEE}},
  author = {Adrian Castello and Antonio J. Pena and Sangmin Seo and Rafael Mayo and Pavan Balaji and Enrique S. Quintana-Orti},
  title = {A Review of Lightweight Thread Approaches for High Performance Computing},
  booktitle = {2016 {IEEE} International Conference on Cluster Computing ({CLUSTER})}
}


@misc{stephen_effective_nodate,
	title = {Effective {Concurrency} through {Algebraic} {Effects}},
	author = {Stephen, Dolan and Leo, White and KC, Sivaramakrishnan and Jeremy, Yallop and Anil, Madhavapeddy},
	year = {2015},
}

@article{Pretnar2015,
  doi = {10.1016/j.entcs.2015.12.003},
  url = {https://doi.org/10.1016/j.entcs.2015.12.003},
  year = {2015},
  month = dec,
  publisher = {Elsevier {BV}},
  volume = {319},
  pages = {19--35},
  author = {Matija Pretnar},
  title = {An Introduction to Algebraic Effects and Handlers. Invited tutorial paper},
  journal = {Electronic Notes in Theoretical Computer Science}
}

@article{Brachthuser2020,
  doi = {10.1145/3428194},
  url = {https://doi.org/10.1145/3428194},
  year = {2020},
  month = nov,
  publisher = {Association for Computing Machinery ({ACM})},
  volume = {4},
  number = {{OOPSLA}},
  pages = {1--30},
  author = {Jonathan Immanuel Brachth\"{a}user and Philipp Schuster and Klaus Ostermann},
  title = {Effects as capabilities: effect handlers and lightweight effect polymorphism},
  journal = {Proceedings of the {ACM} on Programming Languages}
}

@inproceedings{Sivaramakrishnan2021,
  doi = {10.1145/3453483.3454039},
  url = {https://doi.org/10.1145/3453483.3454039},
  year = {2021},
  month = jun,
  publisher = {{ACM}},
  author = {KC Sivaramakrishnan and Stephen Dolan and Leo White and Tom Kelly and Sadiq Jaffer and Anil Madhavapeddy},
  title = {Retrofitting effect handlers onto {OCaml}},
  booktitle = {Proceedings of the 42nd {ACM} {SIGPLAN} International Conference on Programming Language Design and Implementation}
}

@article{Sivaramakrishnan2020,
  doi = {10.1145/3408995},
  url = {https://doi.org/10.1145/3408995},
  year = {2020},
  month = aug,
  publisher = {Association for Computing Machinery ({ACM})},
  volume = {4},
  number = {{ICFP}},
  pages = {1--30},
  author = {KC Sivaramakrishnan and Stephen Dolan and Leo White and Sadiq Jaffer and Tom Kelly and Anmol Sahoo and Sudha Parimala and Atul Dhiman and Anil Madhavapeddy},
  title = {Retrofitting parallelism onto {OCaml}},
  journal = {Proceedings of the {ACM} on Programming Languages}
}

@inproceedings{Miller1968,
  doi = {10.1145/1476589.1476628},
  url = {https://doi.org/10.1145/1476589.1476628},
  year = {1968},
  publisher = {{ACM} Press},
  author = {Robert B. Miller},
  title = {Response time in man-computer conversational transactions},
  booktitle = {Proceedings of the December 9-11,  1968,  fall joint computer conference,  part I on - {AFIPS} {\textquotesingle}68 (Fall,  part I)}
}

@incollection{Amin2013,
  doi = {10.1007/978-3-642-39265-8_11},
  url = {https://doi.org/10.1007/978-3-642-39265-8_11},
  year = {2013},
  publisher = {Springer Berlin Heidelberg},
  pages = {97--106},
  author = {Rahul Amin and France Jackson and Juan E. Gilbert and Jim Martin and Terry Shaw},
  title = {Assessing the Impact of Latency and Jitter on the Perceived Quality of Call of Duty Modern Warfare 2},
  booktitle = {Human-Computer Interaction. Users and Contexts of Use}
}

@article{voip-latency,
  doi = {10.7916/D80Z794V},
  url = {https://academiccommons.columbia.edu/doi/10.7916/D80Z794V},
  author = {Agastya,  Chitra and Mechanic,  Daniel and Kothari,  Neha},
  keywords = {Computer science},
  title = {Mouth-to-Ear Latency in Popular VoIP Clients},
  publisher = {Columbia University},
  year = {2009}
}

@BOOK{Maruzzelli2017-ou,
  title     = "{FreeSWITCH} 1.8",
  author    = "Maruzzelli, Giovanni",
  publisher = "Packt Publishing",
  month     =  jul,
  year      =  2017,
  address   = "Birmingham, England"
}

@BOOK{Kleppmann2017-en,
  title     = "Designing data-intensive applications",
  author    = "Kleppmann, Martin",
  publisher = "O'Reilly Media",
  month     =  mar,
  year      =  2017,
  address   = "Sebastopol, CA"
}

@INPROCEEDINGS{8057206,  author={Cheng, Dazhao and Chen, Yuan and Zhou, Xiaobo and Gmach, Daniel and Milojicic, Dejan},  booktitle={IEEE INFOCOM 2017 - IEEE Conference on Computer Communications},   title={Adaptive scheduling of parallel jobs in spark streaming},   year={2017},  volume={},  number={},  pages={1-9},  doi={10.1109/INFOCOM.2017.8057206}}

@article {latthrough,
title = {An Interposed I/O Scheduling Framework for Latency and Throughput Guarantees},
author = {Zhang, Quan and Feng, Dan and Wang, Fang and Xie, Yanwen},
volume = 17,
issue = 2,
year = 2014,
month = {June},
pub_date = {2014-06-01},
pages = {193--202},
doi = {10.6180/jase.2014.17.2.10},
url = {https://doi.org/10.6180/jase.2014.17.2.10},
journal = {Journal of Applied Science and Engineering},
issn = {1560-6686},
publisher = {Tamkang University Press}
}

@article{Sun2021,
  doi = {10.1016/j.future.2020.08.003},
  url = {https://doi.org/10.1016/j.future.2020.08.003},
  year = {2021},
  month = jan,
  publisher = {Elsevier {BV}},
  volume = {114},
  pages = {243--258},
  author = {Dawei Sun and Hanyu He and Hongbin Yan and Shang Gao and Xunyun Liu and Xinqi Zheng},
  title = {Lr-Stream: Using latency and resource aware scheduling to improve latency and throughput for streaming applications},
  journal = {Future Generation Computer Systems}
}

@incollection{Kirsch2013,
  doi = {10.1007/978-3-642-39958-9_18},
  url = {https://doi.org/10.1007/978-3-642-39958-9_18},
  year = {2013},
  publisher = {Springer Berlin Heidelberg},
  pages = {208--223},
  author = {Christoph M. Kirsch and Michael Lippautz and Hannes Payer},
  title = {Fast and Scalable,  Lock-Free k-{FIFO} Queues},
  booktitle = {Lecture Notes in Computer Science}
}

@inproceedings{Postnikova2022,
  doi = {10.1145/3503221.3508432},
  url = {https://doi.org/10.1145/3503221.3508432},
  year = {2022},
  month = mar,
  publisher = {{ACM}},
  author = {Anastasiia Postnikova and Nikita Koval and Giorgi Nadiradze and Dan Alistarh},
  title = {Multi-queues can be state-of-the-art priority schedulers},
  booktitle = {Proceedings of the 27th {ACM} {SIGPLAN} Symposium on Principles and Practice of Parallel Programming}
}

@inproceedings{faverge:inria-00416502,
  TITLE = {{A NUMA Aware Scheduler for a Parallel Sparse Direct Solver}},
  AUTHOR = {Faverge, Mathieu and Ramet, Pierre},
  URL = {https://hal.inria.fr/inria-00416502},
  BOOKTITLE = {{Workshop on Massively Multiprocessor and Multicore Computers}},
  ADDRESS = {Rocquencourt, France},
  ORGANIZATION = {{INRIA}},
  PAGES = {5p.},
  YEAR = {2009},
  MONTH = Feb,
  KEYWORDS = {http://www.labri.fr/~ramet/restricted/i3m.pdf.gz},
  PDF = {https://hal.inria.fr/inria-00416502/file/i3m.pdf},
  HAL_ID = {inria-00416502},
  HAL_VERSION = {v1},
}

@inproceedings{Drebes2016,
  doi = {10.1145/2851141.2851193},
  url = {https://doi.org/10.1145/2851141.2851193},
  year = {2016},
  month = feb,
  publisher = {{ACM}},
  author = {Andi Drebes and Antoniu Pop and Karine Heydemann and Nathalie Drach and Albert Cohen},
  title = {{NUMA}-aware scheduling and memory allocation for data-flow task-parallel applications},
  booktitle = {Proceedings of the 21st {ACM} {SIGPLAN} Symposium on Principles and Practice of Parallel Programming}
}


@misc{rfc793,
	series =	{Request for Comments},
	number =	793,
	howpublished =	{RFC 793},
	publisher =	{RFC Editor},
	doi =		{10.17487/RFC0793},
	url =		{https://www.rfc-editor.org/info/rfc793},
        author =	{},
	title =		{{Transmission Control Protocol}},
	pagetotal =	91,
	year =		1981,
	month =		sep,
	abstract =	{},
}

 @misc{async_kernel, title={OPAM documentation}, url={https://ocaml.janestreet.com/ocaml-core/111.28.00/doc/async_kernel/#Pipe}, journal={async_kernel}, publisher={Jane Street Capital}} 
 
 @incollection{amdahl,
  doi = {10.1007/978-0-387-09766-4_77},
  url = {https://doi.org/10.1007/978-0-387-09766-4_77},
  year = {2011},
  publisher = {Springer {US}},
  pages = {53--60},
  author = {Rajesh K. Karmani and Gul Agha and Mark S. Squillante and Joel Seiferas and Marian Brezina and Jonathan Hu and Ray Tuminaro and Peter Sanders and Jesper Larsson Tr\"{a}ffe and Robert A. Geijn and Jesper Larsson Tr\"{a}ff and Robert A. Geijn and MS Benjamin Sander and John L. Gustafson and Ron O. Dror and Cliff Young and David E. Shaw and Calvin Lin and Jenq-Kuen Lee and Rong-Guey Chang and Chi-Bang Kuan and Giorgos Kollias and Ananth Y. Grama and Zhiyuan Li and R. Clint Whaley and Richard W. Vuduc},
  title = {Amdahl's Law},
  booktitle = {Encyclopedia of Parallel Computing}
}

@article{Welsh2001,
  doi = {10.1145/502059.502057},
  url = {https://doi.org/10.1145/502059.502057},
  year = {2001},
  month = dec,
  publisher = {Association for Computing Machinery ({ACM})},
  volume = {35},
  number = {5},
  pages = {230--243},
  author = {Matt Welsh and David Culler and Eric Brewer},
  title = {{SEDA}},
  journal = {{ACM} {SIGOPS} Operating Systems Review}
}

@article{Swalens2014,
  doi = {10.4204/eptcs.155.8},
  url = {https://doi.org/10.4204/eptcs.155.8},
  year = {2014},
  month = jun,
  publisher = {Open Publishing Association},
  volume = {155},
  pages = {54--60},
  author = {Janwillem Swalens and Stefan Marr and Joeri De Koster and Tom Van Cutsem},
  title = {Towards Composable Concurrency Abstractions},
  journal = {Electronic Proceedings in Theoretical Computer Science}
}

 @misc{gorout_vs_os_thread, title={Goroutines vs os threads}, url={https://groups.google.com/g/golang-nuts/c/j51G7ieoKh4/m/wxNaKkFEfvcJ}, journal={Google}, publisher={Google}} 
 
 @article{Blumofe1999,
  doi = {10.1145/324133.324234},
  url = {https://doi.org/10.1145/324133.324234},
  year = {1999},
  month = sep,
  publisher = {Association for Computing Machinery ({ACM})},
  volume = {46},
  number = {5},
  pages = {720--748},
  author = {Robert D. Blumofe and Charles E. Leiserson},
  title = {Scheduling multithreaded computations by work stealing},
  journal = {Journal of the {ACM}}
}


@misc{linux_cfs,
	title = {{LKML}: {Steve} {Sistare}: [{PATCH} v3 00/10] steal tasks to improve {CPU} utilization},
	url = {https://lkml.org/lkml/2018/11/9/1173},
	urldate = {2022-05-15},
}

@inproceedings{Blumofe1995,
  doi = {10.1145/209936.209958},
  url = {https://doi.org/10.1145/209936.209958},
  year = {1995},
  publisher = {{ACM} Press},
  author = {Robert D. Blumofe and Christopher F. Joerg and Bradley C. Kuszmaul and Charles E. Leiserson and Keith H. Randall and Yuli Zhou},
  title = {Cilk},
  booktitle = {Proceedings of the fifth {ACM} {SIGPLAN} symposium on Principles and practice of parallel programming  - {PPOPP} {\textquotesingle}95}
}


@misc{golang,
	title = {The {Go} {Programming} {Language}},
	url = {https://go.dev/},
	abstract = {Go is an open source programming language that makes it easy to build simple, reliable, and efficient software.},
	language = {en},
	urldate = {2022-05-15},
}

@misc{POWER4Wi47:online,
author = {},
title = {POWER4 - Wikipedia},
howpublished = {\url{https://en.wikipedia.org/wiki/POWER4#cite_ref-stallings_2-0}},
month = {},
year = {},
note = {(Accessed on 05/17/2022)}
}

@misc{AMDAnnou13:online,
author = {},
title = {AMD Announces Industry's First x86 Dual-Core Processor},
howpublished = {\url{https://phys.org/news/2004-08-amd-industry-x86-dual-core-processor.html}},
month = {},
year = {},
note = {(Accessed on 05/17/2022)}
}

@article{Khan2018,
  doi = {10.1038/s41928-017-0005-9},
  url = {https://doi.org/10.1038/s41928-017-0005-9},
  year = {2018},
  month = jan,
  publisher = {Springer Science and Business Media {LLC}},
  volume = {1},
  number = {1},
  pages = {14--21},
  author = {Hassan N. Khan and David A. Hounshell and Erica R. H. Fuchs},
  title = {Science and research policy at the end of Moore's law},
  journal = {Nature Electronics}
}

@article{Bohr2007,
  doi = {10.1109/n-ssc.2007.4785534},
  url = {https://doi.org/10.1109/n-ssc.2007.4785534},
  year = {2007},
  publisher = {Institute of Electrical and Electronics Engineers ({IEEE})},
  volume = {12},
  number = {1},
  pages = {11--13},
  author = {Mark Bohr},
  title = {A 30 Year Retrospective on Dennard{\textquotesingle}s {MOSFET} Scaling Paper},
  journal = {{IEEE} Solid-State Circuits Newsletter}
}

@misc{2ndGenAM1:online,
author = {},
title = {2nd Gen AMD EPYC™ 7702 | Server Processor | AMD},
howpublished = {\url{https://www.amd.com/en/products/cpu/amd-epyc-7702}},
month = {},
year = {},
note = {(Accessed on 05/17/2022)}
}

@article{Norris2013,
  doi = {10.1145/2544173.2509514},
  url = {https://doi.org/10.1145/2544173.2509514},
  year = {2013},
  month = nov,
  publisher = {Association for Computing Machinery ({ACM})},
  volume = {48},
  number = {10},
  pages = {131--150},
  author = {Brian Norris and Brian Demsky},
  title = {{CDSchecker}},
  journal = {{ACM} {SIGPLAN} Notices}
}
@INPROCEEDINGS{Tennenhouse89layeredmultiplexing,
    author = {David L Tennenhouse},
    title = {Layered Multiplexing Considered Harmful},
    booktitle = {In First International Workshop on High Speed Networking},
    year = {1989}
}

@book{python,
 author = {Van Rossum, Guido and Drake, Fred L.},
 title = {Python 3 Reference Manual},
 year = {2009},
 isbn = {1441412697},
 publisher = {CreateSpace},
 address = {Scotts Valley, CA}
}

@inproceedings{Chase2005,
  doi = {10.1145/1073970.1073974},
  url = {https://doi.org/10.1145/1073970.1073974},
  year = {2005},
  publisher = {{ACM} Press},
  author = {David Chase and Yossi Lev},
  title = {Dynamic circular work-stealing deque},
  booktitle = {Proceedings of the 17th annual {ACM} symposium on Parallelism in algorithms and architectures  - {SPAA}{\textquotesingle}05}
}

@book{Pinedo2012,
  doi = {10.1007/978-1-4614-2361-4},
  url = {https://doi.org/10.1007/978-1-4614-2361-4},
  year = {2012},
  publisher = {Springer {US}},
  author = {Michael L. Pinedo},
  title = {Scheduling}
}

@misc{Howwebbr64:online,
author = {},
title = {How web browsers use Processes and Threads | by Jeewantha Lahiru | Level Up Coding},
howpublished = {\url{https://levelup.gitconnected.com/how-web-browsers-use-processes-and-threads-9f8f8fa23371}},
month = {},
year = {},
note = {(Accessed on 05/17/2022)}
}

@incollection{art_of_mult,
title = {Chapter 1 - Introduction},
editor = {Maurice Herlihy and Nir Shavit and Victor Luchangco and Michael Spear},
booktitle = {The Art of Multiprocessor Programming (Second Edition)},
publisher = {Morgan Kaufmann},
edition = {Second Edition},
address = {Boston},
pages = {1-18},
year = {2021},
isbn = {978-0-12-415950-1},
doi = {https://doi.org/10.1016/B978-0-12-415950-1.00009-4},
url = {https://www.sciencedirect.com/science/article/pii/B9780124159501000094},
author = {Maurice Herlihy and Nir Shavit and Victor Luchangco and Michael Spear},
keywords = {parallelism, concurrent programming, shared-memory multiprocessors, safety, liveness, mutual exclusion, coordination protocol, producer—consumer problem, readers–writers problem, deadlock-freedom, starvation-freedom, Amdahl's law}
}

@misc{OCamllib90:online,
author = {},
title = {OCaml library : List},
howpublished = {\url{https://v2.ocaml.org/api/List.html}},
month = {},
year = {},
note = {(Accessed on 05/18/2022)}
}

@InProceedings{litmus,
author="Alglave, Jade
and Maranget, Luc
and Sarkar, Susmit
and Sewell, Peter",
editor="Abdulla, Parosh Aziz
and Leino, K. Rustan M.",
title="Litmus: Running Tests against Hardware",
booktitle="Tools and Algorithms for the Construction and Analysis of Systems",
year="2011",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="41--44",
abstract="Shared memory multiprocessors typically expose subtle, poorly understood and poorly specified relaxed-memory semantics to programmers. To understand them, and to develop formal models to use in program verification, we find it essential to take an empirical approach, testing what results parallel programs can actually produce when executed on the hardware. We describe a key ingredient of our approach, our litmus tool, which takes small `litmus test' programs and runs them for many iterations to find interesting behaviour. It embodies various techniques for making such interesting behaviour appear more frequently.",
isbn="978-3-642-19835-9"
}

@misc{sadiqjds97:online,
author = {Sadiq Jaffer},
title = {sadiqj/dscheck},
howpublished = {\url{https://github.com/sadiqj/dscheck}},
month = {},
year = {},
note = {(Accessed on 06/01/2022)}
}

@article{fad-cas-speed,
  doi = {10.48550/ARXIV.2010.09852},
  url = {https://arxiv.org/abs/2010.09852},
  author = {Schweizer,  Hermann and Besta,  Maciej and Hoefler,  Torsten},
  keywords = {Distributed,  Parallel,  and Cluster Computing (cs.DC),  Hardware Architecture (cs.AR),  Data Structures and Algorithms (cs.DS),  Performance (cs.PF),  FOS: Computer and information sciences,  FOS: Computer and information sciences},
  title = {Evaluating the Cost of Atomic Operations on Modern Architectures},
  publisher = {arXiv},
  year = {2020},
  copyright = {arXiv.org perpetual,  non-exclusive license}
}

@misc{memoryor11:online,
author = {},
title = {memory\_order - cppreference.com},
howpublished = {\url{https://en.cppreference.com/w/c/atomic/memory_order}},
month = {},
year = {},
note = {(Accessed on 05/18/2022)}
}

@inproceedings{Kappes2021,
  doi = {10.1145/3437801.3441583},
  url = {https://doi.org/10.1145/3437801.3441583},
  year = {2021},
  month = feb,
  publisher = {{ACM}},
  author = {Giorgos Kappes and Stergios V. Anastasiadis},
  title = {A lock-free relaxed concurrent queue for fast work distribution},
  booktitle = {Proceedings of the 26th {ACM} {SIGPLAN} Symposium on Principles and Practice of Parallel Programming}
}

@misc{Frequent1:online,
author = {Twilio},
title = {Frequently Asked Questions | Twilio},
howpublished = {\url{https://www.twilio.com/docs/stun-turn/faq}},
month = {},
year = {},
note = {(Accessed on 05/30/2022)}
}

@book{Hull_John,
title={Options, Futures And Other Derivatives},
author={Hull, John},
publisher={Pearson College Div},
year={2005},
month={6},
day={14},
date={2005-06-14},
edition={Hardcover},
language={English},
pages={789},
keywords={Economics, Futures Trading, Options Trading, Business Investments},
isbn={978-0131499089},
isbn10={0131499084},
url={https://lead.to/amazon/com/?op=bt&la=en&cu=usd&key=0131499084},
url-am={https://www.amazon.com/dp/0131499084/},
url-go={https://books.google.com/books?isbn=9780131499089},
url-wo={https://www.worldcat.org/search?qt=l2a&q=isbn%3A9780131499089},
price={$162.33},
condition={New},
timestamp={2022-06-01},
}

@article{binomial_better,
author = {Nwozo, Chuma and Fadugba, Sunday},
year = {2014},
month = {02},
pages = {33-44},
title = {On the Accuracy of Binomial Model for the Valuation of Standard Options with Dividend Yield in the Context of Black-Scholes Model},
volume = {44},
journal = {IAENG International Journal of Applied Mathematics}
}

@misc{NomadbyH95:online,
author = {HashiCorp},
title = {Nomad by HashiCorp},
howpublished = {\url{https://www.nomadproject.io/}},
month = {},
year = {},
note = {(Accessed on 06/01/2022)}
}

@misc{ocamlmul59:online,
author = {OCaml-Multicore Team},
title = {ocaml-multicore/domainslib: Parallel Programming over Domains},
howpublished = {\url{https://github.com/ocaml-multicore/domainslib}},
month = {},
year = {},
note = {(Accessed on 06/01/2022)}
}

@misc{bartoszm90:online,
author = {Bartosz Modelski},
title = {bartoszmodelski/ebsl},
howpublished = {\url{https://github.com/bartoszmodelski/ebsl}},
month = {},
year = {},
note = {(Accessed on 06/01/2022)}
}

@inproceedings{10.1145/2442516.2442524,
author = {L\^{e}, Nhat Minh and Pop, Antoniu and Cohen, Albert and Zappa Nardelli, Francesco},
title = {Correct and Efficient Work-Stealing for Weak Memory Models},
year = {2013},
isbn = {9781450319225},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2442516.2442524},
doi = {10.1145/2442516.2442524},
abstract = {Chase and Lev's concurrent deque is a key data structure in shared-memory parallel programming and plays an essential role in work-stealing schedulers. We provide the first correctness proof of an optimized implementation of Chase and Lev's deque on top of the POWER and ARM architectures: these provide very relaxed memory models, which we exploit to improve performance but considerably complicate the reasoning. We also study an optimized x86 and a portable C11 implementation, conducting systematic experiments to evaluate the impact of memory barrier optimizations. Our results demonstrate the benefits of hand tuning the deque code when running on top of relaxed memory models.},
booktitle = {Proceedings of the 18th ACM SIGPLAN Symposium on Principles and Practice of Parallel Programming},
pages = {69–80},
numpages = {12},
keywords = {relaxed memory model, work-stealing, proof, lock-free algorithm},
location = {Shenzhen, China},
series = {PPoPP '13}
}

@article{correct_and_efficiect_deque,
author = {L\^{e}, Nhat Minh and Pop, Antoniu and Cohen, Albert and Zappa Nardelli, Francesco},
title = {Correct and Efficient Work-Stealing for Weak Memory Models},
year = {2013},
issue_date = {August 2013},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {48},
number = {8},
issn = {0362-1340},
url = {https://doi.org/10.1145/2517327.2442524},
doi = {10.1145/2517327.2442524},
abstract = {Chase and Lev's concurrent deque is a key data structure in shared-memory parallel programming and plays an essential role in work-stealing schedulers. We provide the first correctness proof of an optimized implementation of Chase and Lev's deque on top of the POWER and ARM architectures: these provide very relaxed memory models, which we exploit to improve performance but considerably complicate the reasoning. We also study an optimized x86 and a portable C11 implementation, conducting systematic experiments to evaluate the impact of memory barrier optimizations. Our results demonstrate the benefits of hand tuning the deque code when running on top of relaxed memory models.},
journal = {SIGPLAN Not.},
month = {feb},
pages = {69–80},
numpages = {12},
keywords = {proof, relaxed memory model, work-stealing, lock-free algorithm}
}


@inproceedings{Sundell2011,
  doi = {10.1145/1989493.1989550},
  url = {https://doi.org/10.1145/1989493.1989550},
  year = {2011},
  publisher = {{ACM} Press},
  author = {H{\aa}kan Sundell and Anders Gidenstam and Marina Papatriantafilou and Philippas Tsigas},
  title = {A lock-free algorithm for concurrent bags},
  booktitle = {Proceedings of the 23rd {ACM} symposium on Parallelism in algorithms and architectures - {SPAA} {\textquotesingle}11}
}

@inproceedings{Postnikova2022,
  doi = {10.1145/3503221.3508432},
  url = {https://doi.org/10.1145/3503221.3508432},
  year = {2022},
  month = mar,
  publisher = {{ACM}},
  author = {Anastasiia Postnikova and Nikita Koval and Giorgi Nadiradze and Dan Alistarh},
  title = {Multi-queues can be state-of-the-art priority schedulers},
  booktitle = {Proceedings of the 27th {ACM} {SIGPLAN} Symposium on Principles and Practice of Parallel Programming}
}
